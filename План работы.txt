План работы:

1. Изначально нужно создать проект с URP и его настроить. Нужно чтобы в будущем не было никаких проблем
с освещением.

2. Сделать глобальный конфиг. Тут просто нужно сделать так, чтобы был только один экземпляр класса который
постоянно находится на сцене и не уничтожается. Он должен быть дочерним от MonoBehavior, дабы он мог искать
другие классы, к которым нужно применить параметры из конфига.

3. Сделать механики игрока:
3.1. Создаем менеджер игрока из диздока. Также менеджер игрока будет принимать значения из конфига.
3.2. Менеджер спавнит самого игрока, у которого будет классы для передвижения, лидара и оружия.
3.3. Нужно сделать так, чтобы менеджер игрока спавнил канвас с игровым UI. Лучше его на сам менеджер не
весить, иначе могут возникнуть проблемы с тестированием игры. Сам же UI нужно и сделать сразу. Также
менеджер при спавне будет сохранять у себя этот класс и менять. Пока что можно будет сделать только
игровое меню.
3.4. Сделать уже передвижение для игрока
3.5. Сделать лидар для игрока.
3.6. Сделать оружие. Выстрел разными типами оружия сделать через делегаты с событиями, дабы выглядело
красиво и если я захочу еще что нибудь придумать смогу спокойно внедрить это в код.
3.7. Доделать UI

4. Создать пикселизированность картинки.

5. Сделать спрайты для игрока и его оружия.

6. Сделать механики противника:
6.1. Создать общий абстрактный (или нет) класс для противника, который наследует MonoBehavior
6.2. Создать менеджер противника, который самого противника спавнит.
6.3. Создать все вариации противника, кроме смертельных. Это все еще и нужно нарисовать!

Все что написано ниже, должно быть и нарисовано сразу же как это делается.

7. Сделать механики заданий:
7.1. Сделать рандомную генерацию уровня. Просто сцена на которой все генерируется сразу же, это
и будет уровнем игры, где весь геймлпей и происходит.
7.2. Сделать механики для всех заданий. Будет общий класс того, что это задание, который может быть
просто выполнен и все. А все дочерние классы будут делаться как угодно.
7.3. Сделать все вариации заданий.
7.4. Сделать генерацию, которое исходит из вариации задания и других настроект конфига.

8. Сделать остальных смертельных врагов.

9. Сделать меню полностью